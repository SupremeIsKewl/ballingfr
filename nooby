_G.MiztReanimSettings = {
    PermanentDeath = false,
    NoHeadPermanentDeath = false,
    Noclip = true,
    HatReanimate = false,
    SemiHatReanimate = false,
    UseMizaruTorso = false,
    FlingActive = true,
    AlignMethod = true,
    Netless = true,
    ActiveLegacyNet = true,
    NetlessVelocity = {0,0,-50}
}

loadstring(game:HttpGet('https://raw.githubusercontent.com/Sylixe/Scripts/main/MiztReanimate.lua',true))()

--Kidd_Anonymouse#9926
local player = game.Players.LocalPlayer
local char = player.Character.Dummy.Dummy
local hum = char:FindFirstChildOfClass("Humanoid")
local RArm = char["Right Arm"]
local LArm = char["Left Arm"]
local RLeg = char["Right Leg"]
local LLeg = char["Left Leg"]
local To = char["Torso"]
local He = char["Head"]
local HRP = char["HumanoidRootPart"]
local mouse = player:GetMouse()
local taunting = false
local dancing = false
dead = false
local face = "rbxasset://textures/face.png"
hum.WalkSpeed = 10
hum.MaxHealth = 5000
wait()
hum.Health = 500
lasthealth = hum.MaxHealth



if char:FindFirstChild("Animation") ~= nil then
char:FindFirstChild("Animation"):remove()
end

function Lerp(c1,c2,al)
local com1 = {c1.X,c1.Y,c1.Z,c1:toEulerAnglesXYZ()}
local com2 = {c2.X,c2.Y,c2.Z,c2:toEulerAnglesXYZ()}
for i,v in pairs(com1) do 
com1[i] = v+(com2[i]-v)*al
end
return CFrame.new(com1[1],com1[2],com1[3]) * CFrame.Angles(select(4,unpack(com1)))
end


function CreateWeld(P0,P1,Name,x,y,z)
local w = Instance.new("Weld",P0)
w.Part0 = w.Parent
w.Part1 = P1
w.Name = Name
w.C0 = CFrame.new(x, y, z)
return w
end

local RS = CreateWeld(To,RArm,"Right Shoulder",1.5,0,0)
local LS = CreateWeld(To,LArm,"Left Shoulder",-1.5,0,0)
local RH = CreateWeld(To,RLeg,"Right Hip",.5,-2,0)
local LH = CreateWeld(To,LLeg,"Left Hip",-.5,-2,0)
local Ne = CreateWeld(To,He,"Neck",0,1.5,0)
local RJ = CreateWeld(HRP,To,"RootJoint")

for i = 5,1,-1 do
if To:FindFirstChildOfClass("Motor6D") ~= nil then
To:FindFirstChildOfClass("Motor6D"):remove()
end
end

--[[
for i = 20,1,-1 do 
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.2)
wait()
end
--]]

local pose = "Idle"
local lastpose = nil









hum.Running:connect(function(Speed)
if Speed > 1 then
pose = "Walking"
else
pose = "Idle"
end
print(pose)

end)

hum.StateChanged:connect(function(State)
if State == Enum.HumanoidStateType.Jumping then
pose = "Jumping"
elseif State == Enum.HumanoidStateType.Freefall then
pose = "Falling"
end
print(State)
end)


-------------------------------------------Start of Attacks & Stuff-------------------------------------------

function taunt(t)
if dead == false then
if t.Parent.ClassName == "Model" and t.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
	
local RS2 = CreateWeld(t.Parent.Torso,t.Parent["Right Arm"],"Right Shoulder",1.5,0,0)
local LS2 = CreateWeld(t.Parent.Torso,t.Parent["Left Arm"],"Left Shoulder",-1.5,0,0)
local RH2 = CreateWeld(t.Parent.Torso,t.Parent["Right Leg"],"Right Hip",.5,-2,0)
local LH2 = CreateWeld(t.Parent.Torso,t.Parent["Left Leg"],"Left Hip",-.5,-2,0)
local Ne2 = CreateWeld(t.Parent.Torso,t.Parent["Head"],"Neck",0,1.5,0)
local RJ2 = CreateWeld(t.Parent.HumanoidRootPart,t.Parent.Torso,"RootJoint")	

local URDED = Instance.new("Sound",char.Head)
URDED.SoundId = "rbxassetid://991087693"
URDED.Volume = 1
URDED.PlaybackSpeed = .9
URDED.PlayOnRemove = true

local NO = Instance.new("Sound",char.Head)
NO.SoundId = "rbxassetid://679798810"
NO.Volume = 1
NO.PlaybackSpeed = 1
NO.PlayOnRemove = true
NO.TimePosition = .15

local Yus = Instance.new("Sound",char.Head)
Yus.SoundId = "rbxassetid://269597232"
Yus.Volume = 1
Yus.PlaybackSpeed = 1
Yus.PlayOnRemove = true

local Ded = Instance.new("Sound",t.Parent.Head)
Ded.SoundId = "rbxassetid://153259684"
Ded.Volume = 1
Ded.PlaybackSpeed = 1
Ded.PlayOnRemove = true

local DeathIsSTUPID = Instance.new("Sound",t.Parent.Head)
DeathIsSTUPID.SoundId = "rbxassetid://203952633"
DeathIsSTUPID.Volume = 1
DeathIsSTUPID.PlaybackSpeed = 1
DeathIsSTUPID.TimePosition = 4.5
DeathIsSTUPID.PlayOnRemove = false


local UhNo = Instance.new("Sound",t.Parent.Head)
UhNo.SoundId = "rbxassetid://154606531"
UhNo.Volume = 1
UhNo.PlaybackSpeed = 1
UhNo.PlayOnRemove = true

local DeathScream = Instance.new("Sound",t.Parent.Head)
DeathScream.SoundId = "rbxassetid://527970724"
DeathScream.Volume = 1
DeathScream.PlaybackSpeed = 1
DeathScream.PlayOnRemove = true

hum.WalkSpeed = 0
hum.JumpPower = 0

t.Parent:FindFirstChildOfClass("Humanoid").WalkSpeed = 0.01
t.Parent:FindFirstChildOfClass("Humanoid").JumpPower = 0
wait(2)
t.Parent:FindFirstChildOfClass("Humanoid").WalkToPart = To
wait(.1)
t.Parent:FindFirstChildOfClass("Humanoid").WalkSpeed = 0

for i = 20,1,-1 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.8,.9,0) * CFrame.Angles(math.rad(0), math.rad(20), math.rad(120)), 0.2)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-1.8,.9,0) * CFrame.Angles(math.rad(0), math.rad(-20), math.rad(-120)), 0.2)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.2)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.2)
wait()
end
DeathIsSTUPID:Play()
wait(2.5)
DeathIsSTUPID:remove()
for i = 20,1,-1 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
NO:remove()
wait(1)
URDED:remove()
for i = 20,1,-2 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.5,-.5) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.8)
wait()
end

for i = 20,1,-2 do
 RS.C0 = Lerp(RS.C0, CFrame.new(.3,0.6,-.5) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(-90)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(13), math.rad(0), math.rad(8)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.8)
wait()
end
for i = 20,1,-1 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.6,-.5) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(-90)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(13), math.rad(0), math.rad(8)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end

for i = 20,1,-1 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
wait(1.5)
UhNo:remove()
for i = 2,1,-1 do
for i = 20,1,-2 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(30), math.rad(0)),0.2)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
for i = 20,1,-2 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(-30), math.rad(0)),0.2)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
end

for i = 20,1,-1 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
wait(0.5)
Yus:remove()
for i = 2,1,-1 do
for i = 20,1,-2 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
for i = 20,1,-2 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
end

for i = 20,1,-1 do
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
DeathScream:remove()

for i = 20,1,-2 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.5,0.6,-.7) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-.5,0.5,-.5) * CFrame.Angles(math.rad(80), math.rad(0), math.rad(90)), 0.8)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(13), math.rad(0), math.rad(8)),0.8)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(10), math.rad(0), 0), 0.8)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.8)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.8)
wait()
end
wait(.5)
Ded:remove()
for i = 20,1,-2 do
 RS2.C0 = Lerp(RS2.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.4)
 LS2.C0 = Lerp(LS2.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.4)
 Ne2.C0 = Lerp(Ne2.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.4)
 RJ2.C0 = Lerp(RJ2.C0, CFrame.new(0,-2.5,3.5) * CFrame.Angles(math.rad(90), math.rad(0), 0), 0.4)
 LH2.C0 = Lerp(LH2.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.4)
 RH2.C0 = Lerp(RH2.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.4)
wait()
end

wait(1)
hum.WalkSpeed = 10
hum.JumpPower = 50
t.Parent:FindFirstChildOfClass("Humanoid").Health = 0



end
end
taunting = false
end


function dance()
if dead == false then
local moosic = Instance.new("Sound",char.Head)
local notimportantthing2 = math.random(1,8)
if notimportantthing2 == 1 then
moosic.SoundId = "rbxassetid://744874281"
elseif notimportantthing2 == 2 then
moosic.SoundId = "rbxassetid://171124369"
elseif notimportantthing2 == 3 then
moosic.SoundId = "rbxassetid://575705300"
elseif notimportantthing2 == 4 then
moosic.SoundId = "rbxassetid://685408383"
elseif notimportantthing2 == 5 then
moosic.SoundId = "rbxassetid://202006112"
elseif notimportantthing2 == 6 then
moosic.SoundId = "rbxassetid://524642625"
elseif notimportantthing2 == 7 then
moosic.SoundId = "rbxassetid://164281616"
elseif notimportantthing2 == 8 then
moosic.SoundId = "rbxassetid://288703954"
end
moosic.Volume = 1
moosic.PlaybackSpeed = 1
moosic.PlayOnRemove = false
moosic.Looped = true
moosic:Play()
hum.WalkSpeed = 5

function thing()


local dancevalue = math.random(1,3)
local face = "rbxassetid://319908966"
char.Head:FindFirstChildOfClass("Decal").Texture = face

if dancevalue == 1 then
for i = 5,1,-1 do	
for i = 20,1,-2 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.5,-.6) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0.5,-.6) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0.4) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.6,-.5) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.8)
wait()
end
end

for i = 20,1,-2 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.5,-.6) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0.5,-.6) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0.4) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-2,-0.5) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.8)
wait()
end
end

for i = 20,1,-2 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.5,-.2) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0.5,-.2) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.5,-0.5) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-2,0.4) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.8)
wait()
end
end


for i = 20,1,-2 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0.5,-.2) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0.5,-.2) * CFrame.Angles(math.rad(90), math.rad(0), math.rad(0)), 0.8)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.8)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), 0), 0.8)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,-0.5) * CFrame.Angles(math.rad(0), 0, math.rad(0)), 0.8)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-2,0.4) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.8)
wait()
end
end



end
elseif dancevalue == 2 then


for i = 5,1,-1 do

for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(.1,0,-.5) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-50)), 0.4)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)), 0.4)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)),0.4)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)), 0.4)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-7)), 0.4)
 RH.C0 = Lerp(RH.C0, CFrame.new(.6,-2.1,0) * CFrame.Angles(math.rad(0), 0, math.rad(3)), 0.4)
wait()
end
end



for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(2,0.8,0) * CFrame.Angles(math.rad(90), math.rad(20), math.rad(89)), 0.4)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)), 0.4)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)),0.4)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)), 0.4)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-3)), 0.4)
 RH.C0 = Lerp(RH.C0, CFrame.new(.6,-2.1,0) * CFrame.Angles(math.rad(0), 0, math.rad(7)), 0.4)
wait()
end
end



end
elseif dancevalue == 3 then





for i = 5,1,-1 do

for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,-.5) * CFrame.Angles(math.rad(50), math.rad(0), math.rad(-5)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,.5) * CFrame.Angles(math.rad(-50), math.rad(0), math.rad(-5)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,-0.5,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(5)), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1,-1) * CFrame.Angles(math.rad(90), 0, math.rad(-5)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(-5)), 0.2)
wait()
end
end


for i = 20,1,-5 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.4)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.4)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.4)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,-0.2,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.4)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.4)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.4)
wait()
end
end



for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,.5) * CFrame.Angles(math.rad(-50), math.rad(0), math.rad(5)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,-.5) * CFrame.Angles(math.rad(50), math.rad(0), math.rad(5)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,-0.5,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(-5)), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(5)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1,-1) * CFrame.Angles(math.rad(90), 0, math.rad(5)), 0.2)
wait()
end
end





for i = 20,1,-5 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.4)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.4)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)),0.4)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,-0.2,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.4)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.4)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.5,-.3) * CFrame.Angles(math.rad(-20), 0, math.rad(0)), 0.4)
wait()
end
end

end






elseif dancevalue == 4 then
	
	

	
for i = 5,1,-1 do









for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.1,0,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(25)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.7,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(25)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(5)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.6,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.2)
wait()
end
end


for i = 20,1,-1 do
if dancing == true then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.1,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-25)), 0.2)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.7,0,0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(-25)), 0.2)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-5)),0.2)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(5)), 0.2)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.6,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.2)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-5)), 0.2)
wait()
end
end


end




end





end--end of "thing" function


repeat thing() until dancing == false 
moosic:remove()


end

end--end of "dance" function




-------------------------------------------end of Attacks & Stuff-------------------------------------------


hum.HealthChanged:connect(function()
if dead == false then
if hum.Health > 10 then
if hum.Health < lasthealth then
local randomface = math.random(1,3)
local s = Instance.new("Sound",char.Head)
s.SoundId = "rbxasset://sounds/uuhhh.mp3"
s.Volume = 20
s.PlayOnRemove = true
local notimportantthing = math.random(1,3)
if notimportantthing == 1 then
s.PlaybackSpeed = .8
elseif notimportantthing == 2 then
s.PlaybackSpeed = 1
elseif notimportantthing == 3 then
s.PlaybackSpeed = 1.2
end
s:remove()

if randomface == 1 then
char.Head:FindFirstChildOfClass("Decal").Texture = "rbxassetid://319908799"
elseif randomface == 2 then
char.Head:FindFirstChildOfClass("Decal").Texture = "rbxassetid://323571827"
elseif randomface == 3 then
char.Head:FindFirstChildOfClass("Decal").Texture = "rbxassetid://321234100"
end
wait(.3)
char.Head:FindFirstChildOfClass("Decal").Texture = face

end

lasthealth = hum.Health - 2
else
dead = true
taunting = nil
dancing = nil
hum.Health = 0
wait(5)
taunting = nil
dancing = nil
end
end
end)




mouse.KeyDown:connect(function(key)
if dead == false then
if key == "m" then
if taunting == false then
taunting = true
taunt(mouse.Target)
end
elseif key == "q" then

if dancing == false and taunting == false then
taunting = true
dancing = true
dance()
elseif dancing == true and taunting == true then
taunting = false
dancing = false
hum.WalkSpeed = 10
local face = "rbxasset://textures/face.png"
char.Head:FindFirstChildOfClass("Decal").Texture = face
end
end
end
end)

while true do
if dead == false then
if taunting == false then
if lastpose ~= pose then
	
	
	------------------------------------------Lastpose ~= pose
if pose == "Idle" then
	
---------------------------------Idle1-------------------------------	
for i = 20,1,-1 do
if pose == "Idle" then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.05)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0.1,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.05)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(-30), math.rad(0)),0.05)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(0), math.rad(30), 0), 0.05)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.05)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-2,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.05)
wait()
end
end
---------------------------------Idle1-------------------------------	


elseif pose == "Walking" then


---------------------------------Walking1-------------------------------	
for i = 20,1,-1 do
if pose == "Walking" then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,0.45) * CFrame.Angles(math.rad(-25), math.rad(8), math.rad(0)), 0.08)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,-0.5) * CFrame.Angles(math.rad(20), math.rad(8), math.rad(0)), 0.08)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(5), math.rad(8), math.rad(0)),0.08)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(-5), math.rad(-8), 0), 0.08)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.95,0.6) * CFrame.Angles(math.rad(-25), math.rad(8), math.rad(0)), 0.08)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.95,-1) * CFrame.Angles(math.rad(25), math.rad(8), math.rad(0)), 0.08)
wait()
end
end
---------------------------------Walking1-------------------------------	

elseif pose == "Jumping" then



---------------------------------Jumping-------------------------------	
--None--
---------------------------------Jumping-------------------------------





end
lastpose = pose
elseif lastpose == pose then
	-------------------------------------------Lastpose == pose
	
	
if pose == "Idle" then
	
---------------------------------Idle2-------------------------------		
for i = 20,1,-1 do 
if pose == "Idle" then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.6,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(7)), 0.05)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.6,0,0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-7)), 0.05)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(0), math.rad(-30), math.rad(0)),0.05)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,-0.05,0) * CFrame.Angles(math.rad(0), math.rad(30), 0), 0.05)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.7,-1.95,0) * CFrame.Angles(math.rad(0), 0, math.rad(-10)), 0.05)
 RH.C0 = Lerp(RH.C0, CFrame.new(.7,-1.95,0) * CFrame.Angles(math.rad(0), 0, math.rad(10)), 0.05)
wait()
end
end
---------------------------------Idle2-------------------------------	
elseif pose == "Walking" then
	
---------------------------------Walking2-------------------------------	
for i = 20,1,-1 do
if pose == "Walking" then
 RS.C0 = Lerp(RS.C0, CFrame.new(1.5,0,-0.45) * CFrame.Angles(math.rad(20), math.rad(-8), math.rad(0)), 0.08)
 LS.C0 = Lerp(LS.C0, CFrame.new(-1.5,0,0.5) * CFrame.Angles(math.rad(-25), math.rad(-8), math.rad(0)), 0.08)
 Ne.C0 = Lerp(Ne.C0, CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(4), math.rad(-8), math.rad(0)),0.08)
 RJ.C0 = Lerp(RJ.C0, CFrame.new(0,0,0) * CFrame.Angles(math.rad(-5), math.rad(8), 0), 0.08)
 LH.C0 = Lerp(LH.C0, CFrame.new(-.5,-1.95,-1) * CFrame.Angles(math.rad(25), math.rad(-8), math.rad(0)), 0.08)
 RH.C0 = Lerp(RH.C0, CFrame.new(.5,-1.95,0.6) * CFrame.Angles(math.rad(-25), math.rad(-8), math.rad(0)), 0.08)
wait()
end
end
---------------------------------Walking2-------------------------------	

end
	
	
lastpose = nil	
	
end
end
end
wait()
end
